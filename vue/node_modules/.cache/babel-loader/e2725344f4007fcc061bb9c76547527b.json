{"remainingRequest":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Fliskey\\Desktop\\res77\\src\\views\\goods\\upload_pak.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\src\\views\\goods\\upload_pak.vue","mtime":1625651778149},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy9GbGlza2V5L0Rlc2t0b3AvcmVzNzcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0ZsaXNrZXkvRGVza3RvcC9yZXM3Ny9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmZ1bmN0aW9uIGdldEJhc2U2NChmaWxlKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CgogICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHJlc29sdmUocmVhZGVyLnJlc3VsdCk7CiAgICB9OwoKICAgIHJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgfTsKICB9KTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBkZWZhdWx0SW1hZ2VMaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgZmlsZVR5cGVMaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIGxpbWl0U2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIGxpbWl0TnVtOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMjAsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIG11bHRpcGxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW1hZ2U6ICcnLAogICAgICBwcmV2aWV3VmlzaWJsZTogZmFsc2UsCiAgICAgIHByZXZpZXdJbWFnZTogJycsCiAgICAgIGltYWdlTGlzdDogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgZGVmYXVsdEltYWdlTGlzdDogZnVuY3Rpb24gZGVmYXVsdEltYWdlTGlzdChuZXdWYWwpIHsKICAgICAgdGhpcy5pbWFnZUxpc3QgPSB0aGlzLmhhbmRsZURhdGEobmV3VmFsKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmltYWdlTGlzdCA9IHRoaXMuaGFuZGxlRGF0YSh0aGlzLmRlZmF1bHRJbWFnZUxpc3QpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0taW1nLS1zdGFydAogICAgYmVmb3JlSW1hZ2VVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZUltYWdlVXBsb2FkKGZpbGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgY29uc29sZS5sb2coZmlsZSk7CiAgICAgICAgX3RoaXMuaW1hZ2UgPSBmaWxlOwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmltYWdlKTsKCiAgICAgICAgaWYgKCFfdGhpcy5maWxlVHlwZUxpc3QpIHsKICAgICAgICAgIHZhciBpbmRleCA9IF90aGlzLmZpbGVUeXBlTGlzdC5pbmRleE9mKGZpbGUudHlwZSk7CgogICAgICAgICAgaWYgKGluZGV4ID4gMCkgewogICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcigiXHU2MEE4XHU1M0VBXHU4MEZEXHU0RTBBXHU0RjIwIi5jb25jYXQoX3RoaXMuZmlsZVR5cGVMaXN0W2luZGV4XSwgIlx1NjU4N1x1NEVGNiIpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBsaW1pdFNpemUgPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8IF90aGlzLmxpbWl0U2l6ZTsKCiAgICAgICAgaWYgKCFsaW1pdFNpemUpIHsKICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCJcdTY1ODdcdTRFRjZcdTU5MjdcdTVDMEZcdTRFMERcdTgwRkRcdTU5MjdcdTRFOEUiLmNvbmNhdChfdGhpcy5saW1pdFNpemUsICJNQiIpKTsKCiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcigiXHU2NTg3XHU0RUY2XHU1OTI3XHU1QzBGXHU0RTBEXHU4MEZEXHU1OTI3XHU0RThFIi5jb25jYXQoX3RoaXMubGltaXRTaXplLCAiTUIiKSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVByZXZpZXc6IGZ1bmN0aW9uIGhhbmRsZVByZXZpZXcoZmlsZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2hhcHJlJyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmaWxlLnVybCk7CgogICAgICAgICAgICAgICAgaWYgKCEoIWZpbGUudXJsICYmICFmaWxlLnByZXZpZXcpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRCYXNlNjQoZmlsZS5vcmlnaW5GaWxlT2JqKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZmlsZS5wcmV2aWV3ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3RoaXMyLnByZXZpZXdJbWFnZSA9IGZpbGUudXJsIHx8IGZpbGUucHJldmlldzsKICAgICAgICAgICAgICAgIF90aGlzMi5wcmV2aWV3VmlzaWJsZSA9IHRydWU7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoYW5kbGVDYW5jZWw6IGZ1bmN0aW9uIGhhbmRsZUNhbmNlbCgpIHsKICAgICAgdGhpcy5wcmV2aWV3VmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIGN1c3RvbVJlcXVlc3Q6IGZ1bmN0aW9uIGN1c3RvbVJlcXVlc3QoX3JlZikgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBhY3Rpb24gPSBfcmVmLmFjdGlvbiwKICAgICAgICAgIGZpbGUgPSBfcmVmLmZpbGUsCiAgICAgICAgICBvblN1Y2Nlc3MgPSBfcmVmLm9uU3VjY2VzcywKICAgICAgICAgIG9uRXJyb3IgPSBfcmVmLm9uRXJyb3IsCiAgICAgICAgICBvblByb2dyZXNzID0gX3JlZi5vblByb2dyZXNzOwogICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CgogICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGluZGV4ID0gewogICAgICAgICAgICB1aWQ6IF90aGlzMy5nZW5JZCg1KSwKICAgICAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgICAgICBzdGF0dXM6ICdkb25lJywKICAgICAgICAgICAgdXJsOiBmaWxlUmVhZGVyLnJlc3VsdAogICAgICAgICAgfTsKICAgICAgICAgIF90aGlzMy5pbWFnZUxpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzMy5pbWFnZUxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLnN0YXR1cyA9PT0gJ2RvbmUnOwogICAgICAgICAgfSkpLCBbaW5kZXhdKTsKCiAgICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn5paH5Lu25LiK5Lyg5oiQ5Yqf77yBJyk7CgogICAgICAgICAgX3RoaXMzLmhhbmRsZUNoYW5nZSgpOwoKICAgICAgICAgIHJlc29sdmUoZmlsZVJlYWRlci5yZXN1bHQpOwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUltYWdlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVJbWFnZUNoYW5nZShpbmZvKSB7CiAgICAgIHZhciBmaWxlTGlzdCA9IF90b0NvbnN1bWFibGVBcnJheShpbmZvLmZpbGVMaXN0KTsKCiAgICAgIHRoaXMuaW1hZ2VMaXN0ID0gZmlsZUxpc3Q7CiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKCk7CiAgICB9LAogICAgaGFuZGxlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMuaW1hZ2VMaXN0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnVybDsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udXJsOwogICAgICB9KTsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgaW5kZXggPyBpbmRleCA6IFtdKTsKICAgIH0sCiAgICBnZW5JZDogZnVuY3Rpb24gZ2VuSWQobGVuZ3RoKSB7CiAgICAgIHJldHVybiBOdW1iZXIoTWF0aC5yYW5kb20oKS50b1N0cmluZygpLnN1YnN0cigzLCBsZW5ndGgpICsgRGF0ZS5ub3coKSkudG9TdHJpbmcoMzYpOwogICAgfSwKICAgIGhhbmRsZURhdGE6IGZ1bmN0aW9uIGhhbmRsZURhdGEobGlzdCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciBpbmRleCA9IF90aGlzNC5nZW5JZCg1KTsKCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHVpZDogaW5kZXgsCiAgICAgICAgICBuYW1lOiBpbmRleCwKICAgICAgICAgIHN0YXR1czogJ2RvbmUnLAogICAgICAgICAgdXJsOiBpdGVtCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9IC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWltZy0tZW5kCgogIH0KfTs="},{"version":3,"sources":["upload_pak.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"clearfix\">\n    <a-upload\n      :beforeUpload=\"beforeImageUpload\"\n      list-type=\"picture-card\"\n      :file-list=\"imageList\"\n      :multiple=\"multiple\"\n      :disabled=\"disabled\"\n      @change=\"handleImageChange\"\n      @preview=\"handlePreview\"\n      :custom-request=\"customRequest\"\n    >\n      <div v-if=\"imageList.length < limitNum && !disabled\">\n        <a-icon type=\"plus\"/>\n        <div class=\"ant-upload-text\">上传</div>\n      </div>\n    </a-upload>\n    <a-modal :visible=\"previewVisible\" :footer=\"null\" @cancel=\"handleCancel\">\n      <img alt=\"example\" style=\"width: 100%\" :src=\"previewImage\"/>\n    </a-modal>\n  </div>\n</template>\n<script>\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n}\n\nexport default {\n  props: {\n    defaultImageList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: true\n    },\n    fileTypeList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: false\n    },\n    limitSize: {\n      type: Number,\n      default: 5,\n      required: false\n    },\n    limitNum: {\n      type: Number,\n      default: 20,\n      required: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      image: '',\n      previewVisible: false,\n      previewImage: '',\n      imageList: []\n    }\n  },\n  watch: {\n    defaultImageList(newVal) {\n      this.imageList = this.handleData(newVal)\n    }\n  },\n  created() {\n    this.imageList = this.handleData(this.defaultImageList)\n  },\n  methods: {\n    // ---------------------------------------------img--start\n    beforeImageUpload(file) {\n      return new Promise((resolve, reject) => {\n        console.log(file)\n        this.image=file\n        console.log(this.image)\n\n        if (!this.fileTypeList) {\n          const index = this.fileTypeList.indexOf(file.type)\n          if (index > 0) {\n            this.$message.error(`您只能上传${this.fileTypeList[index]}文件`)\n          }\n        }\n        const limitSize = file.size / 1024 / 1024 < this.limitSize\n        if (!limitSize) {\n          this.$message.error(`文件大小不能大于${this.limitSize}MB`)\n          return reject(new Error(`文件大小不能大于${this.limitSize}MB`))\n        }\n        return resolve(true)\n      })\n    },\n    async handlePreview(file) {\n      console.log('hapre')\n      console.log(file.url)\n\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj)\n      }\n      this.previewImage = file.url || file.preview\n      this.previewVisible = true\n    },\n    handleCancel() {\n      this.previewVisible = false\n    },\n    customRequest({ action, file, onSuccess, onError, onProgress }) {\n      new Promise(resolve => {\n        const fileReader = new FileReader()\n        fileReader.readAsDataURL(file)\n        fileReader.onload = () => {\n          let index = {\n            uid: this.genId(5),\n            name: file.name,\n            status: 'done',\n            url: fileReader.result\n          }\n          this.imageList = [...this.imageList.filter(item => item.status === 'done'), index]\n          this.$message.success('文件上传成功！')\n          this.handleChange()\n          resolve(fileReader.result)\n        }\n      })\n    },\n    handleImageChange(info) {\n      let fileList = [...info.fileList]\n      this.imageList = fileList\n      this.handleChange()\n    },\n    handleChange() {\n      let index = this.imageList.filter(item => item.url).map(item => {\n        return item.url\n      })\n      this.$emit('change', index ? index : [])\n    },\n    genId(length) {\n      return Number(Math.random().toString().substr(3, length) + Date.now()).toString(36)\n    },\n    handleData (list) {\n      return list.map(item => {\n        let index = this.genId(5)\n        return {\n          uid: index,\n          name: index,\n          status: 'done',\n          url: item\n        }\n      })\n    }\n    // ---------------------------------------------img--end\n  }\n}\n</script>\n<style>\n/* you can make up upload button and sample style by using stylesheets */\n.ant-upload-select-picture-card i {\n  font-size: 32px;\n  color: #999;\n}\n\n.ant-upload-select-picture-card .ant-upload-text {\n  margin-top: 8px;\n  color: #666;\n}\n</style>\n"],"sourceRoot":"src/views/goods"}]}