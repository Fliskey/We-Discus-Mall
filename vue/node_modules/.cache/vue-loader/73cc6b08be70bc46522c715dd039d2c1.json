{"remainingRequest":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Fliskey\\Desktop\\res77\\src\\components\\upload_pak.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\src\\components\\upload_pak.vue","mtime":1625650183708},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmZ1bmN0aW9uIGdldEJhc2U2NChmaWxlKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpCiAgICByZWFkZXIub25sb2FkID0gKCkgPT4gcmVzb2x2ZShyZWFkZXIucmVzdWx0KQogICAgcmVhZGVyLm9uZXJyb3IgPSBlcnJvciA9PiByZWplY3QoZXJyb3IpCiAgfSkKfQoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBkZWZhdWx0SW1hZ2VMaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gW10KICAgICAgfSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBmaWxlVHlwZUxpc3Q6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBbXQogICAgICB9LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBsaW1pdFNpemU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBsaW1pdE51bTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIwLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByZXZpZXdWaXNpYmxlOiBmYWxzZSwKICAgICAgcHJldmlld0ltYWdlOiAnJywKICAgICAgaW1hZ2VMaXN0OiBbXQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRlZmF1bHRJbWFnZUxpc3QobmV3VmFsKSB7CiAgICAgIHRoaXMuaW1hZ2VMaXN0ID0gdGhpcy5oYW5kbGVEYXRhKG5ld1ZhbCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmltYWdlTGlzdCA9IHRoaXMuaGFuZGxlRGF0YSh0aGlzLmRlZmF1bHRJbWFnZUxpc3QpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1pbWctLXN0YXJ0CiAgICBiZWZvcmVJbWFnZVVwbG9hZChmaWxlKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgaWYgKCF0aGlzLmZpbGVUeXBlTGlzdCkgewogICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmZpbGVUeXBlTGlzdC5pbmRleE9mKGZpbGUudHlwZSkKICAgICAgICAgIGlmIChpbmRleCA+IDApIHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihg5oKo5Y+q6IO95LiK5LygJHt0aGlzLmZpbGVUeXBlTGlzdFtpbmRleF195paH5Lu2YCkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc3QgbGltaXRTaXplID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCB0aGlzLmxpbWl0U2l6ZQogICAgICAgIGlmICghbGltaXRTaXplKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGDmlofku7blpKflsI/kuI3og73lpKfkuo4ke3RoaXMubGltaXRTaXplfU1CYCkKICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGDmlofku7blpKflsI/kuI3og73lpKfkuo4ke3RoaXMubGltaXRTaXplfU1CYCkpCiAgICAgICAgfQogICAgICAgIHJldHVybiByZXNvbHZlKHRydWUpCiAgICAgIH0pCiAgICB9LAogICAgYXN5bmMgaGFuZGxlUHJldmlldyhmaWxlKSB7CiAgICAgIGlmICghZmlsZS51cmwgJiYgIWZpbGUucHJldmlldykgewogICAgICAgIGZpbGUucHJldmlldyA9IGF3YWl0IGdldEJhc2U2NChmaWxlLm9yaWdpbkZpbGVPYmopCiAgICAgIH0KICAgICAgdGhpcy5wcmV2aWV3SW1hZ2UgPSBmaWxlLnVybCB8fCBmaWxlLnByZXZpZXcKICAgICAgdGhpcy5wcmV2aWV3VmlzaWJsZSA9IHRydWUKICAgIH0sCiAgICBoYW5kbGVDYW5jZWwoKSB7CiAgICAgIHRoaXMucHJldmlld1Zpc2libGUgPSBmYWxzZQogICAgfSwKICAgIGN1c3RvbVJlcXVlc3QoeyBhY3Rpb24sIGZpbGUsIG9uU3VjY2Vzcywgb25FcnJvciwgb25Qcm9ncmVzcyB9KSB7CiAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpCiAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSAoKSA9PiB7CiAgICAgICAgICBsZXQgaW5kZXggPSB7CiAgICAgICAgICAgIHVpZDogdGhpcy5nZW5JZCg1KSwKICAgICAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgICAgICBzdGF0dXM6ICdkb25lJywKICAgICAgICAgICAgdXJsOiBmaWxlUmVhZGVyLnJlc3VsdAogICAgICAgICAgfQogICAgICAgICAgdGhpcy5pbWFnZUxpc3QgPSBbLi4udGhpcy5pbWFnZUxpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS5zdGF0dXMgPT09ICdkb25lJyksIGluZGV4XQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlofku7bkuIrkvKDmiJDlip/vvIEnKQogICAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UoKQogICAgICAgICAgcmVzb2x2ZShmaWxlUmVhZGVyLnJlc3VsdCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlSW1hZ2VDaGFuZ2UoaW5mbykgewogICAgICBsZXQgZmlsZUxpc3QgPSBbLi4uaW5mby5maWxlTGlzdF0KICAgICAgdGhpcy5pbWFnZUxpc3QgPSBmaWxlTGlzdAogICAgICB0aGlzLmhhbmRsZUNoYW5nZSgpCiAgICB9LAogICAgaGFuZGxlQ2hhbmdlKCkgewogICAgICBsZXQgaW5kZXggPSB0aGlzLmltYWdlTGlzdC5maWx0ZXIoaXRlbSA9PiBpdGVtLnVybCkubWFwKGl0ZW0gPT4gewogICAgICAgIHJldHVybiBpdGVtLnVybAogICAgICB9KQogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBpbmRleCA/IGluZGV4IDogW10pCiAgICB9LAogICAgZ2VuSWQobGVuZ3RoKSB7CiAgICAgIHJldHVybiBOdW1iZXIoTWF0aC5yYW5kb20oKS50b1N0cmluZygpLnN1YnN0cigzLCBsZW5ndGgpICsgRGF0ZS5ub3coKSkudG9TdHJpbmcoMzYpCiAgICB9LAogICAgaGFuZGxlRGF0YSAobGlzdCkgewogICAgICByZXR1cm4gbGlzdC5tYXAoaXRlbSA9PiB7CiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5nZW5JZCg1KQogICAgICAgIHJldHVybiB7CiAgICAgICAgICB1aWQ6IGluZGV4LAogICAgICAgICAgbmFtZTogaW5kZXgsCiAgICAgICAgICBzdGF0dXM6ICdkb25lJywKICAgICAgICAgIHVybDogaXRlbQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWltZy0tZW5kCiAgfQp9Cg=="},{"version":3,"sources":["upload_pak.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"upload_pak.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"clearfix\">\n    <a-upload\n      :beforeUpload=\"beforeImageUpload\"\n      list-type=\"picture-card\"\n      :file-list=\"imageList\"\n      :multiple=\"multiple\"\n      :disabled=\"disabled\"\n      @change=\"handleImageChange\"\n      @preview=\"handlePreview\"\n      :custom-request=\"customRequest\"\n    >\n      <div v-if=\"imageList.length < limitNum && !disabled\">\n        <a-icon type=\"plus\"/>\n        <div class=\"ant-upload-text\">上传</div>\n      </div>\n    </a-upload>\n    <a-modal :visible=\"previewVisible\" :footer=\"null\" @cancel=\"handleCancel\">\n      <img alt=\"example\" style=\"width: 100%\" :src=\"previewImage\"/>\n    </a-modal>\n  </div>\n</template>\n<script>\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n}\n\nexport default {\n  props: {\n    defaultImageList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: true\n    },\n    fileTypeList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: false\n    },\n    limitSize: {\n      type: Number,\n      default: 5,\n      required: false\n    },\n    limitNum: {\n      type: Number,\n      default: 20,\n      required: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      previewVisible: false,\n      previewImage: '',\n      imageList: []\n    }\n  },\n  watch: {\n    defaultImageList(newVal) {\n      this.imageList = this.handleData(newVal)\n    }\n  },\n  created() {\n    this.imageList = this.handleData(this.defaultImageList)\n  },\n  methods: {\n    // ---------------------------------------------img--start\n    beforeImageUpload(file) {\n      return new Promise((resolve, reject) => {\n        if (!this.fileTypeList) {\n          const index = this.fileTypeList.indexOf(file.type)\n          if (index > 0) {\n            this.$message.error(`您只能上传${this.fileTypeList[index]}文件`)\n          }\n        }\n        const limitSize = file.size / 1024 / 1024 < this.limitSize\n        if (!limitSize) {\n          this.$message.error(`文件大小不能大于${this.limitSize}MB`)\n          return reject(new Error(`文件大小不能大于${this.limitSize}MB`))\n        }\n        return resolve(true)\n      })\n    },\n    async handlePreview(file) {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj)\n      }\n      this.previewImage = file.url || file.preview\n      this.previewVisible = true\n    },\n    handleCancel() {\n      this.previewVisible = false\n    },\n    customRequest({ action, file, onSuccess, onError, onProgress }) {\n      new Promise(resolve => {\n        const fileReader = new FileReader()\n        fileReader.readAsDataURL(file)\n        fileReader.onload = () => {\n          let index = {\n            uid: this.genId(5),\n            name: file.name,\n            status: 'done',\n            url: fileReader.result\n          }\n          this.imageList = [...this.imageList.filter(item => item.status === 'done'), index]\n          this.$message.success('文件上传成功！')\n          this.handleChange()\n          resolve(fileReader.result)\n        }\n      })\n    },\n    handleImageChange(info) {\n      let fileList = [...info.fileList]\n      this.imageList = fileList\n      this.handleChange()\n    },\n    handleChange() {\n      let index = this.imageList.filter(item => item.url).map(item => {\n        return item.url\n      })\n      this.$emit('change', index ? index : [])\n    },\n    genId(length) {\n      return Number(Math.random().toString().substr(3, length) + Date.now()).toString(36)\n    },\n    handleData (list) {\n      return list.map(item => {\n        let index = this.genId(5)\n        return {\n          uid: index,\n          name: index,\n          status: 'done',\n          url: item\n        }\n      })\n    }\n    // ---------------------------------------------img--end\n  }\n}\n</script>\n<style>\n/* you can make up upload button and sample style by using stylesheets */\n.ant-upload-select-picture-card i {\n  font-size: 32px;\n  color: #999;\n}\n\n.ant-upload-select-picture-card .ant-upload-text {\n  margin-top: 8px;\n  color: #666;\n}\n</style>\n"]}]}