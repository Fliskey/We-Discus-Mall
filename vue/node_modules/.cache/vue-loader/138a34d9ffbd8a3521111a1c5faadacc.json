{"remainingRequest":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Fliskey\\Desktop\\res77\\src\\views\\goods\\upload_pak.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\src\\views\\goods\\upload_pak.vue","mtime":1625651778149},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fliskey\\Desktop\\res77\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogeW91IGNhbiBtYWtlIHVwIHVwbG9hZCBidXR0b24gYW5kIHNhbXBsZSBzdHlsZSBieSB1c2luZyBzdHlsZXNoZWV0cyAqLwouYW50LXVwbG9hZC1zZWxlY3QtcGljdHVyZS1jYXJkIGkgewogIGZvbnQtc2l6ZTogMzJweDsKICBjb2xvcjogIzk5OTsKfQoKLmFudC11cGxvYWQtc2VsZWN0LXBpY3R1cmUtY2FyZCAuYW50LXVwbG9hZC10ZXh0IHsKICBtYXJnaW4tdG9wOiA4cHg7CiAgY29sb3I6ICM2NjY7Cn0K"},{"version":3,"sources":["upload_pak.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"upload_pak.vue","sourceRoot":"src/views/goods","sourcesContent":["<template>\n  <div class=\"clearfix\">\n    <a-upload\n      :beforeUpload=\"beforeImageUpload\"\n      list-type=\"picture-card\"\n      :file-list=\"imageList\"\n      :multiple=\"multiple\"\n      :disabled=\"disabled\"\n      @change=\"handleImageChange\"\n      @preview=\"handlePreview\"\n      :custom-request=\"customRequest\"\n    >\n      <div v-if=\"imageList.length < limitNum && !disabled\">\n        <a-icon type=\"plus\"/>\n        <div class=\"ant-upload-text\">上传</div>\n      </div>\n    </a-upload>\n    <a-modal :visible=\"previewVisible\" :footer=\"null\" @cancel=\"handleCancel\">\n      <img alt=\"example\" style=\"width: 100%\" :src=\"previewImage\"/>\n    </a-modal>\n  </div>\n</template>\n<script>\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n}\n\nexport default {\n  props: {\n    defaultImageList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: true\n    },\n    fileTypeList: {\n      type: Array,\n      default: function() {\n        return []\n      },\n      required: false\n    },\n    limitSize: {\n      type: Number,\n      default: 5,\n      required: false\n    },\n    limitNum: {\n      type: Number,\n      default: 20,\n      required: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      image: '',\n      previewVisible: false,\n      previewImage: '',\n      imageList: []\n    }\n  },\n  watch: {\n    defaultImageList(newVal) {\n      this.imageList = this.handleData(newVal)\n    }\n  },\n  created() {\n    this.imageList = this.handleData(this.defaultImageList)\n  },\n  methods: {\n    // ---------------------------------------------img--start\n    beforeImageUpload(file) {\n      return new Promise((resolve, reject) => {\n        console.log(file)\n        this.image=file\n        console.log(this.image)\n\n        if (!this.fileTypeList) {\n          const index = this.fileTypeList.indexOf(file.type)\n          if (index > 0) {\n            this.$message.error(`您只能上传${this.fileTypeList[index]}文件`)\n          }\n        }\n        const limitSize = file.size / 1024 / 1024 < this.limitSize\n        if (!limitSize) {\n          this.$message.error(`文件大小不能大于${this.limitSize}MB`)\n          return reject(new Error(`文件大小不能大于${this.limitSize}MB`))\n        }\n        return resolve(true)\n      })\n    },\n    async handlePreview(file) {\n      console.log('hapre')\n      console.log(file.url)\n\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj)\n      }\n      this.previewImage = file.url || file.preview\n      this.previewVisible = true\n    },\n    handleCancel() {\n      this.previewVisible = false\n    },\n    customRequest({ action, file, onSuccess, onError, onProgress }) {\n      new Promise(resolve => {\n        const fileReader = new FileReader()\n        fileReader.readAsDataURL(file)\n        fileReader.onload = () => {\n          let index = {\n            uid: this.genId(5),\n            name: file.name,\n            status: 'done',\n            url: fileReader.result\n          }\n          this.imageList = [...this.imageList.filter(item => item.status === 'done'), index]\n          this.$message.success('文件上传成功！')\n          this.handleChange()\n          resolve(fileReader.result)\n        }\n      })\n    },\n    handleImageChange(info) {\n      let fileList = [...info.fileList]\n      this.imageList = fileList\n      this.handleChange()\n    },\n    handleChange() {\n      let index = this.imageList.filter(item => item.url).map(item => {\n        return item.url\n      })\n      this.$emit('change', index ? index : [])\n    },\n    genId(length) {\n      return Number(Math.random().toString().substr(3, length) + Date.now()).toString(36)\n    },\n    handleData (list) {\n      return list.map(item => {\n        let index = this.genId(5)\n        return {\n          uid: index,\n          name: index,\n          status: 'done',\n          url: item\n        }\n      })\n    }\n    // ---------------------------------------------img--end\n  }\n}\n</script>\n<style>\n/* you can make up upload button and sample style by using stylesheets */\n.ant-upload-select-picture-card i {\n  font-size: 32px;\n  color: #999;\n}\n\n.ant-upload-select-picture-card .ant-upload-text {\n  margin-top: 8px;\n  color: #666;\n}\n</style>\n"]}]}