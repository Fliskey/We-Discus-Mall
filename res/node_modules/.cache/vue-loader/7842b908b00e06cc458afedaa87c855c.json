{"remainingRequest":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyuncong/GitHub/We-Discus-Mall/res/src/views/home/home.vue?vue&type=template&id=39f87be5&scoped=true&","dependencies":[{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/src/views/home/home.vue","mtime":1625620806834},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}