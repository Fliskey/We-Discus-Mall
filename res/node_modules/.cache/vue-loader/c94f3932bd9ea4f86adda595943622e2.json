{"remainingRequest":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyuncong/GitHub/We-Discus-Mall/res/src/page/layout.vue?vue&type=template&id=9ac9433e&","dependencies":[{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/src/page/layout.vue","mtime":1625618468224},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyuncong/GitHub/We-Discus-Mall/res/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}