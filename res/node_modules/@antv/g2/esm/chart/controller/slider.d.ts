import { TrendCfg } from '../../dependents';
import { ComponentOption, Datum } from '../../interface';
import View from '../view';
import { Controller } from './base';
export declare type SliderFormatterType = (val: any, datum: Datum, idx: number) => any;
/** Slider 配置 */
export interface SliderOption {
    /** slider 高度 */
    readonly height?: number;
    /** 滑块背景区域配置 */
    readonly trendCfg?: TrendCfg;
    /** 滑块背景样式 */
    readonly backgroundStyle?: any;
    /** 滑块前景样式 */
    readonly foregroundStyle?: any;
    /** 滑块两个操作块样式 */
    readonly handlerStyle?: any;
    /** 文本样式 */
    readonly textStyle?: any;
    /** 允许滑动位置的最小值 */
    readonly minLimit?: number;
    /** 允许滑动位置的最大值 */
    readonly maxLimit?: number;
    /** 滑块初始化的起始位置 */
    readonly start?: number;
    /** 滑块初始化的结束位置 */
    readonly end?: number;
    /** 滑块文本格式化函数 */
    formatter?: SliderFormatterType;
}
declare type Option = SliderOption | boolean;
/**
 * @ignore
 * slider Controller
 */
export default class Slider extends Controller<Option> {
    private slider;
    private container;
    constructor(view: View);
    get name(): string;
    /**
     * 初始化
     */
    init(): void;
    /**
     * 渲染
     */
    render(): void;
    /**
     * 布局
     */
    layout(): void;
    /**
     * 更新
     */
    update(): void;
    /**
     * 创建 slider 组件
     */
    private createSlider;
    /**
     * 更新配置
     */
    private updateSlider;
    /**
     * 生成 slider 配置
     */
    private getSliderCfg;
    /**
     * 从 view 中获取数据，缩略轴使用全量的数据
     */
    private getData;
    /**
     * 滑块滑动的时候出发
     * @param v
     */
    private onValueChanged;
    private updateMinMaxText;
    /**
     * 覆写父类方法
     */
    getComponents(): ComponentOption[];
}
export {};
