{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../src/geometry/shape/edge/util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAGlC;;;;;;GAMG;AACH,MAAM,UAAU,QAAQ,CAAC,IAAW,EAAE,EAAS;IAC7C,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,MAAM,CAAC,IAAI,CAAC;QACV,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KACjC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KACjC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEhB,IAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK;QAChB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,QAAQ,CAAC,EAAS,EAAE,MAAa;IAC/C,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,MAAM,CAAC,IAAI,CAAC;QACV,CAAC,EAAE,MAAM,CAAC,CAAC;QACX,CAAC,EAAE,MAAM,CAAC,CAAC;KACZ,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEhB,IAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK;QAChB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { each } from '@antv/util';\nimport { Point } from '../../../interface';\n\n/**\n * @ignore\n * Gets cpath\n * @param from\n * @param to\n * @returns\n */\nexport function getCPath(from: Point, to: Point) {\n  const points = [];\n  points.push({\n    x: from.x,\n    y: from.y * 1 / 2 + to.y * 1 / 2,\n  });\n\n  points.push({\n    x: to.x,\n    y: from.y * 1 / 2 + to.y * 1 / 2,\n  });\n  points.push(to);\n\n  const sub = ['C'];\n  each(points, point => {\n    sub.push(point.x, point.y);\n  });\n\n  return sub;\n}\n\n/**\n * @ignore\n * Gets qpath\n * @param to\n * @param center\n * @returns\n */\nexport function getQPath(to: Point, center: Point) {\n  const points = [];\n  points.push({\n    x: center.x,\n    y: center.y\n  });\n  points.push(to);\n\n  const sub = ['Q'];\n  each(points, point => {\n    sub.push(point.x, point.y);\n  });\n\n  return sub;\n}\n"]}