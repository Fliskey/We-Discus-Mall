{"version":3,"file":"interval.js","sourceRoot":"","sources":["../../../src/geometry/label/interval.ts"],"names":[],"mappings":"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","sourcesContent":["import { get } from '@antv/util';\n\nimport { MappingDatum, Point } from '../../interface';\nimport GeometryLabel from './base';\nimport { LabelPointCfg } from './interface';\n\n/**\n * 柱状图 label\n */\nexport default class IntervalLabel extends GeometryLabel {\n\n  protected setLabelPosition(labelPointCfg: LabelPointCfg, mappingData: MappingDatum, index: number, position: string) {\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const shapePoints = mappingData.points as Point[];\n    const point0 = coordinate.convert(shapePoints[0]);\n    const point1 = coordinate.convert(shapePoints[2]);\n    const flag = transposed ? -1 : 1;\n    const width = ((point0.x - point1.x) / 2) * flag;\n    const height = ((point0.y - point1.y) / 2) * flag;\n\n    switch (position) {\n      case 'right':\n        if (!transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'left');\n        break;\n      case 'left':\n        if (transposed) {\n          labelPointCfg.x -= width * 2;\n        } else {\n          labelPointCfg.x += width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'right');\n        break;\n      case 'bottom':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y -= height;\n        } else {\n          labelPointCfg.y += height * 2;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'top');\n        break;\n      case 'middle':\n        if (transposed) {\n          labelPointCfg.x -= width;\n        } else {\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        break;\n      case 'top':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'bottom');\n        break;\n      default:\n        break;\n    }\n  }\n}\n"]}